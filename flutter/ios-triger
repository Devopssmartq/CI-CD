pipeline {
    agent {
        kubernetes {
            //label 'jenkins-private-cluster-0'
            defaultContainer 'jnlp'
            yaml '''
        apiVersion: v1
        kind: Pod
        environment:
            name: "NODE_OPTIONS"
            value: "--max-old-space-size=4096"
        spec:
          containers:
          - name: jnlp  
            resources:
              requests:
                memory: "2048Mi"
                cpu: "500m"
              limits:
                memory: "4096Mi"
                cpu: "1000m"

          - name: gcloud
            image: google/cloud-sdk:latest
            command:
            - cat
            tty: true
        '''        
        }
    }
    environment {
        CODEMAGIC_API_KEY = credentials('codemagic-cred')
        CODEMAGIC_APP_ID = '63b2aabdb4222db5c6deda2b'
        CODEMAGIC_BRANCH = 'auto-sprint'
        WORKFLOW_ID = 'ios-native-quick-start'
    }

    stages {
        // stage('Checkout') {
        //     steps {
        //         sh "mkdir -p ios"
        //         dir('ios') {
        //             checkout([$class: 'GitSCM', 
        //             branches: [[name: "auto-sprint"]], 
        //             doGenerateSubmoduleConfigurations: false, 
        //             extensions: [[$class: 'CleanCheckout']], 
        //             userRemoteConfigs: [[url: 'https://yash123devops@bitbucket.org/bottlelabtech/smartq-ios-main-app.git', credentialsId: 'bitbucket api',]]])
                        
        //             sh 'ls -lrt'
        //         }
        //     }            
        // }
        stage('Trigger CodeMagic Build') {
            steps {
                script {
                    def apiUrl = 'https://api.codemagic.io/builds'
                    def payload = "{\"appId\": \"${CODEMAGIC_APP_ID}\", \"branch\": \"${CODEMAGIC_BRANCH}\", \"workflowId\": \"${WORKFLOW_ID}\"}"

                    withCredentials([string(credentialsId: 'codemagic-cred', variable: 'CODEMAGIC_API_KEY')]) {
                        // sh """
                        //     curl -X POST -H 'Content-Type: application/json' -H 'x-auth-token: ${CODEMAGIC_API_KEY}' -d '${payload}' ${apiUrl}
                        // """
                        def response = sh(script: """curl -X POST -H 'Content-Type: application/json' -H 'x-auth-token: $CODEMAGIC_API_KEY' -d '$payload' $apiUrl""", returnStdout: true).trim()

                        echo "CodeMagic API Response: ${response}"

                        // Parse the response if it's in JSON format
                        def jsonResponse = readJSON text: response
                        echo "Build Status: ${jsonResponse.status}"
                        echo "Build Log URL: ${jsonResponse.buildLogUrl}"
                    }
                }
            }
        }

    }
}
