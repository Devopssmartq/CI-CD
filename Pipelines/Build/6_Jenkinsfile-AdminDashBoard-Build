/* groovylint-disable CompileStatic */
// Uses Declarative syntax to run commands inside a container.
pipeline {
    agent {
        kubernetes {
            yaml '''
        apiVersion: v1
        kind: Pod
        environment:
            name: "NODE_OPTIONS"
            value: "--max-old-space-size=4096"
        spec:
          containers:
          - name: jnlp  
            resources:
              requests:
                memory: "2048Mi"
                cpu: "500m"
              limits:
                memory: "4096Mi"
                cpu: "1000m"
                
          - name: nodejs
            image: node:18-alpine
            command:
            - cat
            tty: true

          - name: gcloud
            image: google/cloud-sdk:latest
            command:
            - cat
            tty: true
        '''        
        }
    }

    environment {
        APP_ENGINE_PROJECT_ID = 'sqpreprod-us'
        ENVIRONMENT='MASTER'
        VERSION_NUMBER = VersionNumber([
            versionNumberString: '${BUILD_DATE_FORMATTED, "yyyyMMdd"}-${BUILDS_TODAY}', 
            //versionPrefix: 'v1.0.', 
            worstResultForIncrement: 'SUCCESS'
        ])
    }
     
    stages {  
        stage('Build Platform 1') { 
            steps { 
                sh "mkdir -p generic-admin-dashboard"                
                dir('generic-admin-dashboard') {
                    git branch: 'feature/bqreports/jenkins',
                    credentialsId: '205fee1d-5909-4587-abe4-8c50bdc37556',
                    url: 'https://vrp63531@bitbucket.org/bottlelabtech/generic-admin-dashboard.git'                   
                }
            }                       
        }
        stage('Build') {
            steps {
                dir('generic-admin-dashboard') {         
                    container('nodejs') {
                        sh 'npm install --force'
                        sh 'CI=false npm run build'
                        dir ('build') {
                            sh 'echo changing to directory'
                            sh 'ls -l'
                        }
                    }             
                }      
            }
        }

        stage('Upload to GCS') {
            steps {
                container('gcloud') {
                    sh 'gcloud config set project $APP_ENGINE_PROJECT_ID'                    
                    sh 'gcloud storage cp ${WORKSPACE}/generic-admin-dashboard/build/* gs://sqinternational-cicd.appspot.com/$ENVIRONMENT/generic-admin-dashboard/generic-admin-dashboard-$VERSION_NUMBER --recursive'
                }
            }
        }
    }
}