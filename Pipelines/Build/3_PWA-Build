/* groovylint-disable CompileStatic */
// Uses Declarative syntax to run commands inside a container.
pipeline {
    agent {
        kubernetes {
            yaml '''
        apiVersion: v1
        kind: Pod
        environment:
            name: "NODE_OPTIONS"
            value: "--max-old-space-size=4096"
        spec:
          containers:
          - name: jnlp  
            resources:
              requests:
                memory: "2048Mi"
                cpu: "500m"
              limits:
                memory: "4096Mi"
                cpu: "1000m"
                
          - name: nodejs
            image: node:18-alpine
            command:
            - cat
            tty: true

          - name: gcloud
            image: google/cloud-sdk:latest
            command:
            - cat
            tty: true
        '''        
        }
    }

    environment {
        ENVIRONMENT='MASTER'
        VERSION_NUMBER = VersionNumber([
            versionNumberString: '${BUILD_DATE_FORMATTED, "yyyyMMdd"}-${BUILDS_TODAY}', 
            //versionPrefix: 'v1.0.', 
            worstResultForIncrement: 'SUCCESS'
        ])        
    }
     
    stages {  
        stage('Checkout PWA') { 
            steps { 
                sh "mkdir -p time2eatweb"
                dir('time2eatweb') {
                    git branch: 'auto-sprint',
                    credentialsId: 'git/devops/new',
                    url: 'https://github.com/Bottle-Lab-Technologies-PVT-LTD/time2eatweb.git'
                }
            }                       
        }
        stage('Build PWA') {
            steps {
                container('nodejs') {
                 sh 'echo ${WORKSPACE}'
                   dir('time2eatweb') {
                        sh 'npm install --force'
                        sh 'CI=false npm run build:app1'
                        sh 'CI=false npm run build:app2'
                        sh 'CI=false npm run build:app3'
                        sh 'CI=false npm run build:app4'
                        sh 'CI=false npm run build:app5'
                        dir ('${WORKSPACE}/time2eatweb/build') {
                            sh 'echo changing to directory'
                        }
                   }
                }             
            }
        }

        stage('Upload to GCS') {
            steps {
                container('gcloud') {
                    dir('time2eatweb') {
                        sh 'ls'
                        sh 'gcloud storage cp ${WORKSPACE}/time2eatweb/*.yaml gs://sqinternational-cicd.appspot.com/$ENVIRONMENT/time2eat/time2eat@$VERSION_NUMBER --recursive'
                    }
                    sh 'gcloud storage cp ${WORKSPACE}/time2eatweb/build/* gs://sqinternational-cicd.appspot.com/$ENVIRONMENT/time2eat/time2eat@$VERSION_NUMBER/build --recursive'
                }
            }
        }
    }
}